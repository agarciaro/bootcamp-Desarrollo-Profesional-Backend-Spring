server:
  port: 8083

spring:
  application:
    name: notification-service
  main:
    web-application-type: reactive
  profiles:
    active: local
  r2dbc:
    url: r2dbc:h2:mem:///notificationdb
    username: sa
    password: 
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql
  h2:
    console:
      enabled: true
      path: /h2-console
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: userEvent:com.bootcamp.notification.consumer.UserEvent
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: MANUAL_IMMEDIATE
      type: single
      concurrency: 3
      poll-timeout: 3000
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        multiplier: 2.0

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging configuration
logging:
  level:
    com.bootcamp.notification: DEBUG
    org.springframework.kafka: INFO 